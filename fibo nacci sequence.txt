
Fibonacci Sequence using Iteration (Python):

def fibonacci_iterative(n):
    fib_sequence = [0, 1]
    for i in range(2, n):
        fib_sequence.append(fib_sequence[i - 1] + fib_sequence[i - 2])
    return fib_sequence[:n]

# Example usage
n = 10
print(f"Iterative Fibonacci sequence for first {n} numbers:", fibonacci_iterative(n))


Fibonacci Sequence using Recursion (Python):

def fibonacci_recursive(n):
    if n <= 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fibonacci_recursive(n - 1) + fibonacci_recursive(n - 2)

# Example usage
n = 10
fib_sequence_recursive = [fibonacci_recursive(i) for i in range(n)]
print(f"Recursive Fibonacci sequence for first {n} numbers:", fib_sequence_recursive)


Differences between Iteration and Recursion:

| Aspect              | Iteration                                  | Recursion                                 |
|---------------------|--------------------------------------------|-------------------------------------------|
| **Definition**      | Uses loops to calculate each Fibonacci term until the nth number. | Calls the function within itself to calculate terms. |
| **Complexity**      | **O(n)** – More efficient and runs faster. | **O(2^n)** – Exponential time complexity. |
| **Memory Usage**    | Uses a fixed amount of memory.             | Each recursive call adds to the call stack, so it uses more memory. |
| **Implementation**  | Generally easier to follow for this sequence. | May look cleaner but harder to debug, especially for large `n`. |


Advantages and Disadvantages:

- **Iterative Approach:**
  - **Advantages:** Efficient, faster for large values of `n`, and doesn't risk stack overflow.
  - **Disadvantages:** Slightly less "elegant" compared to recursion.

- **Recursive Approach:**
  - **Advantages:** Elegant and directly translates the Fibonacci definition.
  - **Disadvantages:** Highly inefficient for large `n` due to repeated calls and can cause stack overflow.


Fibonacci Sequence using Iteration (C++):

#include <iostream>
#include <vector>

std::vector<int> fibonacci_iterative(int n) {
    std::vector<int> fib_sequence;
    if (n >= 1) fib_sequence.push_back(0); // F(0)
    if (n >= 2) fib_sequence.push_back(1); // F(1)

    for (int i = 2; i < n; ++i) {
        fib_sequence.push_back(fib_sequence[i - 1] + fib_sequence[i - 2]);
    }
    
    return fib_sequence;
}

int main() {
    int n = 10;
    std::vector<int> fib_sequence = fibonacci_iterative(n);
    std::cout << "Iterative Fibonacci sequence for first " << n << " numbers: ";
    for (int num : fib_sequence) {
        std::cout << num << " ";
    }
    std::cout << std::endl;
    return 0;
}


Fibonacci Sequence using Recursion (C++):

#include <iostream>

int fibonacci_recursive(int n) {
    if (n <= 0) return 0;
    if (n == 1) return 1;
    return fibonacci_recursive(n - 1) + fibonacci_recursive(n - 2);
}

int main() {
    int n = 10;
    std::cout << "Recursive Fibonacci sequence for first " << n << " numbers: ";
    for (int i = 0; i < n; ++i) {
        std::cout << fibonacci_recursive(i) << " ";
    }
    std::cout << std::endl;
    return 0;
}


Real-Life Examples of the Fibonacci Sequence:

1. Biological Patterns:
   - **Plant Growth**: Fibonacci numbers often show up in the arrangement of leaves, flowers, and fruits. Many plants grow new branches, leaves, or petals in ways that follow the sequence, creating optimal spacing for light and nutrients. For instance:
      - The number of petals on some flowers (e.g., lilies have 3, buttercups have 5) often follows Fibonacci numbers.
      - The arrangement of seeds in sunflowers, pinecones, and pineapples typically spirals in Fibonacci-based patterns for efficient packing.
   
   - **Animal Reproduction**: Fibonacci numbers can describe population growth in idealized scenarios. For example, if each pair of rabbits produces another pair, the population growth pattern resembles the Fibonacci sequence. Though real-world conditions affect these outcomes, the sequence is a useful model for basic population growth.

2. Financial Markets:
   - **Technical Analysis**: Fibonacci ratios (like 23.6%, 38.2%, 50%, and 61.8%) are often used to predict levels of support and resistance in financial markets. Traders use these Fibonacci levels to anticipate price movements in stocks and other assets, making decisions about entry and exit points in trading.

3. Computer Algorithms:
   - **Data Structure Design**: Fibonacci sequences help optimize data structures like Fibonacci heaps, which are useful for applications involving graphs (e.g., Dijkstra’s algorithm for shortest path).
   - **Compression Algorithms**: In certain algorithms, Fibonacci numbers provide efficient encoding schemes. Fibonacci coding is used for representing integers compactly in data compression.

4. Art and Architecture:
   - **The Golden Ratio**: Closely related to Fibonacci numbers, the golden ratio (approximately 1.618) appears when dividing consecutive Fibonacci numbers. Artists and architects have used this ratio to create aesthetically pleasing designs, like in ancient Greek architecture (the Parthenon) and artworks by Leonardo da Vinci (like "Vitruvian Man").

5. Human Anatomy:
   - **Body Proportions**: Fibonacci ratios are often observed in human anatomy. For example:
      - The ratio of the length of the forearm to the hand is close to the golden ratio.
      - Some facial structures, like the spacing of the eyes, the length of the nose, and the proportions of the mouth, may reflect Fibonacci proportions, which some studies associate with aesthetic appeal.

6. Music:
   - **Rhythm and Scales**: In music, Fibonacci numbers can be used to create rhythmic patterns or scales. Some compositions are structured in ways that align with Fibonacci numbers, providing balance and natural flow. Musicians like Debussy and Bartók have used Fibonacci-based structures in their compositions.

7. Digital Image Processing:
   - **Spiral Image Capturing**: Fibonacci-based spirals are used to focus on certain areas of images for efficient image processing, with applications in both photography and computer vision.


More Interesting Facts about the Fibonacci Sequence:

1. It’s Everywhere in Nature:
   - **Shells and Snails**: Many spiral shells follow the Fibonacci pattern. As these creatures grow, they spiral outward, and their shell follows a “golden spiral,” which is based on Fibonacci numbers.
   - **Storms and Galaxies**: Hurricanes and galaxies also follow spiral shapes that match the Fibonacci sequence, showing just how universal this pattern is, even on a huge scale.

2. Fibonacci and the Golden Ratio:
   - The **golden ratio** (about 1.618) is closely linked to the Fibonacci sequence. If you divide one Fibonacci number by the one before it, you get a number close to the golden ratio. The bigger the Fibonacci numbers, the closer this ratio gets to 1.618.
   - This ratio is famous for being very pleasing to the eye and is seen as harmonious, beautiful, and balanced.

3. Fibonacci in Computer Science:
   - **Data Storage and Searching**: Fibonacci numbers help build data structures (like Fibonacci heaps), which let computers store and retrieve data quickly, useful in shortest-path calculations.
   - **Fibonacci Hashing**: A technique used to distribute data evenly, which can make algorithms faster.

4. Fibonacci Betting Systems:
   - Some gamblers use Fibonacci numbers to decide their next bets. It’s a way to help players try to break even, though it doesn’t guarantee a win!

5. Fibonacci and Stock Market Analysis:
   - Traders in the stock market use **Fibonacci retracement levels** to predict how high or low a stock’s price might go, a technique to analyze patterns and trends in prices.

6. Fibonacci in Music and Sound Waves:
   - Musical scales, such as the octave, have connections to Fibonacci numbers. The Fibonacci sequence’s pattern of notes creates harmony.
   - Sound engineers use Fibonacci-based structures to balance sound in rooms by placing speakers in ways that maximize quality.

7. The Fibonacci Spiral for Zooming In:
   - Fibonacci spirals are used in digital imaging to zoom in smoothly and focus on different areas. The golden spiral, based on Fibonacci numbers, is a pattern that keeps viewers interested by drawing their eyes toward a focal point.

8. Programming Challenges with Fibonacci:
   - In coding, Fibonacci is a great way to learn about efficiency. Programmers learn to improve Fibonacci calculations using techniques like memoization or dynamic programming.

9. Art with Fibonacci Fractals:
   - Fibonacci numbers inspire fractal art. Fractals are self-repeating patterns, and when built using Fibonacci numbers, they create beautiful, natural designs. 

10. Fun Facts:
   - **Fibonacci Rabbits**: Fibonacci discovered the sequence while studying rabbit reproduction and found that their growth rate matched the Fibonacci sequence.
   - **The Fibonacci Sequence Never Ends**: Fibonacci numbers just keep going and growing larger, showing no end to the sequence.
   - **Connection to Pascal’s Triangle**: Each Fibonacci number can be found by adding up numbers on a diagonal line in Pascal’s Triangle, showing connections to many areas of math.
